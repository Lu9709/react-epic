{"version":3,"file":"static/js/893.2db3cf8c.chunk.js","mappings":"0RAOOA,EAAWC,EAAAA,EAAAA,QACZC,EAASC,EAAAA,GAAAA,IAAH,2FAKNC,EAAKD,EAAAA,GAAAA,GAAH,gEAIFE,EAAQF,EAAAA,GAAAA,IAAH,6CAuGX,GAnGkBG,EAAAA,EAAAA,KAAS,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,UACXC,GAAYD,EAAAA,EAAAA,UAClB,GAAiCE,EAAAA,EAAAA,KAAzBC,EAAR,EAAQA,WAAWC,EAAnB,EAAmBA,UACbC,GAAQC,EAAAA,EAAAA,KAAc,iBAAK,CAC/BC,MAAM,KACNC,SAF+B,SAEtBD,GACPF,EAAME,MAAQA,GAEZE,eACF,OAAOJ,EAAME,MAAN,aAAkBF,EAAME,OAAQ,IAEzCG,OAAO,KACPC,UAT+B,SASrBD,GACRL,EAAMK,OAASA,GAEbE,gBACF,OAAOP,EAAMK,OAAN,aAAmBL,EAAMK,QAAS,IAEvCG,cACF,OAAOV,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,IAAM,gBAAkBX,EAAMI,SAAWJ,EAAMO,eAUpGK,EAAQ,CACZC,gBAAgB,EAChBC,aAAa,SAAAC,GAGX,OAFAjB,EAAWkB,QAAQD,GACnBjB,EAAWmB,YAAYF,EAAKG,MACC,OAA1BnB,EAAUoB,aACXC,EAAAA,GAAAA,QAAgB,qDACT,IAETC,OAAON,KAAOA,EACV,4BAA4BO,KAAKP,EAAKQ,MAIvCR,EAAKS,KAAO,SACbJ,EAAAA,GAAAA,MAAc,yEACP,IAETtB,EAAW2B,SACRC,MAAK,SAACjB,GACLkB,QAAQC,IAAI,4BACZD,QAAQC,IAAInB,MACXoB,OAAM,WACTF,QAAQC,IAAI,gCAEP,IAdLR,EAAAA,GAAAA,MAAc,0FACP,MAiBb,OACE,iCACE,SAAC,IAAD,CAAMU,IAAI,qBAAMC,SAAUjC,EAAWkC,YAArC,UACE,UAAC7C,GAAD,kBAAayB,GAAb,eACE,cAAGqB,UAAU,uBAAb,UACE,SAACC,EAAA,EAAD,OAEF,cAAGD,UAAU,kBAAb,2EACA,cAAGA,UAAU,kBAAb,qJAMFnC,EAAWW,YAAa,UAACpB,EAAD,YACtB,SAACE,EAAD,wCACA,2BACE,sDACA,yBAAI,cAAG4C,OAAO,SAASC,KAAOtC,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,IAA1E,SACDb,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,SACnD,gDACA,wBAAKb,EAAWuC,YAChB,sDACA,yBACE,SAAC7C,EAAD,CAAO8C,IAAKxC,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,IAAK4B,IAAKzC,EAAWuC,cAEnF,sDACA,2BACE,kBAAOG,IAAK9C,EAAU+C,SA/DV,WACtBzC,EAAMG,SAAST,EAASgD,QAAQC,QA8D2BC,YAAY,4CAC7D,kBAAOJ,IAAK5C,EAAW6C,SA7DV,WACvBzC,EAAMM,UAAUV,EAAU8C,QAAQC,QA4D2BC,YAAY,+CAEjE,yBACE,cAAGT,OAAO,SAASC,KAAMpC,EAAMQ,QAA/B,SAAyCR,EAAMQ,kBAGzC,WC9GdqC,EAAOvD,EAAAA,GAAAA,IAAH,8HAkBV,GAVkBG,EAAAA,EAAAA,KAAS,YAAiB,IAAfqD,EAAc,EAAdA,SACnB/C,GAAcF,EAAAA,EAAAA,KAAdE,UACR,OACE,8BAEIA,EAAUoB,YAAc,MAAO,SAAC0B,EAAD,UAAOC,SCL9C,GARarD,EAAAA,EAAAA,KAAS,WAClB,OACI,iCACE,SAAC,EAAD,6DACA,SAACsD,EAAD","sources":["components/Uploader.js","components/Tips.js","pages/Home.js"],"sourcesContent":["import React, {useRef} from 'react';\r\nimport {useStores} from \"../stores\";\r\nimport {observer,useLocalStore} from \"mobx-react\";\r\nimport {message, Upload,Spin} from \"antd\";\r\nimport {InboxOutlined} from '@ant-design/icons';\r\nimport styled from \"styled-components\";\r\n\r\nconst {Dragger} = Upload;\r\nconst Result = styled.div`\r\n  margin-top: 30px;\r\n  border: 1px dashed #ccc;\r\n  padding: 20px;\r\n`\r\nconst H1 = styled.h1`\r\n  margin: 20px;\r\n  text-align: center;\r\n`\r\nconst Image = styled.img`\r\n  max-width: 300px;\r\n`\r\n\r\nconst Component = observer(() => {\r\n  const widthRef = useRef()\r\n  const heightRef = useRef()\r\n  const { ImageStore,UserStore } = useStores();\r\n  const store = useLocalStore(()=>({\r\n    width:null,\r\n    setWidth(width){\r\n      store.width = width;\r\n    },\r\n    get widthStr () {\r\n      return store.width?`/w/${store.width}`:''\r\n    },\r\n    height:null,\r\n    setHeight(height){\r\n      store.height = height;\r\n    },\r\n    get heightStr () {\r\n      return store.height?`/h/${store.height}`:''\r\n    },\r\n    get fullStr(){\r\n      return ImageStore.serverFile.attributes.url.attributes.url + '?imageView2/0' + store.widthStr + store.heightStr\r\n    },\r\n  }))\r\n\r\n  const bindWidthChange = () => {\r\n    store.setWidth(widthRef.current.value)\r\n  }\r\n  const bindHeightChange = () => {\r\n    store.setHeight(heightRef.current.value)\r\n  }\r\n  const props = {\r\n    showUploadList: false,\r\n    beforeUpload:file=>{\r\n      ImageStore.setFile(file)\r\n      ImageStore.setFilename(file.name)\r\n      if(UserStore.currentUser === null) {\r\n        message.warning('请先登录再上传！')\r\n        return false;\r\n      }\r\n      window.file = file\r\n      if(!/(svg|png|jpg|jpeg|gif)$/ig.test(file.type)){\r\n        message.error('只能上传.svg/.png/.jpg/.jpeg/.gif格式的文件！')\r\n        return false;\r\n      }\r\n      if(file.size > 1024* 1024){\r\n        message.error('图片最大尺寸不能超过1M！')\r\n        return false;\r\n      }\r\n      ImageStore.upload()\r\n        .then((serverFile)=>{\r\n          console.log('上传成功')\r\n          console.log(serverFile)\r\n        }).catch(()=>{\r\n        console.log('上传失败')\r\n      })\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Spin tip='上传中' spinning={ImageStore.isUploading}>\r\n        <Dragger {...props}>\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <InboxOutlined />\r\n          </p>\r\n          <p className=\"ant-upload-text\">点击或者拖拽上传图片</p>\r\n          <p className=\"ant-upload-hint\">\r\n            仅支持.svg/.png/.jpg/.jpeg/.gif格式的图片，最大尺寸不能超过1M\r\n          </p>\r\n        </Dragger>\r\n      </Spin>\r\n      {\r\n        ImageStore.serverFile ? <Result>\r\n          <H1>上传结果</H1>\r\n          <dl>\r\n            <dt>完整路径</dt>\r\n            <dd><a target='_blank' href={ ImageStore.serverFile.attributes.url.attributes.url}>\r\n              {ImageStore.serverFile.attributes.url.attributes.url}</a></dd>\r\n            <dd>文件名</dd>\r\n            <dd>{ImageStore.filename}</dd>\r\n            <dt>图片预览</dt>\r\n            <dd>\r\n              <Image src={ImageStore.serverFile.attributes.url.attributes.url} alt={ImageStore.filename}/>\r\n            </dd>\r\n            <dt>更多尺寸</dt>\r\n            <dd>\r\n              <input ref={widthRef} onChange={bindWidthChange} placeholder='最大宽度(可选)'/>\r\n              <input ref={heightRef} onChange={bindHeightChange} placeholder='最大高度(可选)'/>\r\n            </dd>\r\n            <dd>\r\n              <a target='_blank' href={store.fullStr}>{store.fullStr}</a>\r\n            </dd>\r\n          </dl>\r\n        </Result> : null\r\n      }\r\n    </>\r\n  );\r\n})\r\nexport default Component;\r\n","import React from 'react';\r\nimport {useStores} from \"../stores\";\r\nimport {observer} from \"mobx-react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Tips = styled.div`\r\n  background: orange;\r\n  padding: 10px;\r\n  margin: 30px 0;\r\n  color: #FFFFFF;\r\n  border-radius: 4px;\r\n`\r\n\r\nconst Component = observer(({children}) => {\r\n  const { UserStore } = useStores();\r\n  return (\r\n    <>\r\n      {\r\n        UserStore.currentUser ? null : <Tips>{children}</Tips>\r\n      }\r\n    </>\r\n  )\r\n})\r\nexport default Component\r\n","import React from \"react\";\r\nimport {observer} from \"mobx-react\";\r\nimport Uploader from \"../components/Uploader\";\r\nimport Tips from \"../components/Tips\";\r\n\r\nconst Home = observer(()=> {\r\n    return (\r\n        <>\r\n          <Tips>请先登录再上传!!!</Tips>\r\n          <Uploader/>\r\n        </>\r\n    )\r\n})\r\nexport default Home\r\n"],"names":["Dragger","Upload","Result","styled","H1","Image","observer","widthRef","useRef","heightRef","useStores","ImageStore","UserStore","store","useLocalStore","width","setWidth","widthStr","height","setHeight","heightStr","fullStr","serverFile","attributes","url","props","showUploadList","beforeUpload","file","setFile","setFilename","name","currentUser","message","window","test","type","size","upload","then","console","log","catch","tip","spinning","isUploading","className","InboxOutlined","target","href","filename","src","alt","ref","onChange","current","value","placeholder","Tips","children","Uploader"],"sourceRoot":""}