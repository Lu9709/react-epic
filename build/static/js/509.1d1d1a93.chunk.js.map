{"version":3,"file":"static/js/509.1d1d1a93.chunk.js","mappings":"kQAOMA,EAAMC,EAAAA,GAAAA,IAAH,8GAyDT,GAjDkBC,EAAAA,EAAAA,KAAS,WACzB,OAAiCC,EAAAA,EAAAA,KAA1BC,EAAP,EAAOA,aAAaC,EAApB,EAAoBA,UAGdC,EAAW,WACfF,EAAaG,QAGTC,EAAU,CACdC,WAAYL,EAAaM,KAAKC,OAC9BC,aAAa,EACbC,UAAW,EACXC,KAAM,kBAAMR,KAEZS,WAAYV,EAAUW,aAhBE,+BAAE,SAAC,IAAD,CAASC,OAAK,EAAd,oDAgBqB,GAC/CC,SAAUd,EAAae,WAAaf,EAAac,QACjDE,WAAW,GAUb,OAPAC,EAAAA,EAAAA,YAAU,WAER,OADGhB,EAAUW,aAAaV,IACnB,WACLF,EAAakB,WAEf,KAGA,+BACE,SAAC,KAAD,kBAAoBd,GAApB,cACE,SAAC,KAAD,CACEe,WAAYnB,EAAaM,KACzBc,WAAY,SAAAC,GAAI,OACd,UAAC,UAAD,YACE,0BACE,SAACzB,EAAD,CAAK0B,IAAKD,EAAKE,WAAWC,IAAID,WAAWC,IAAKC,IAAKJ,EAAKE,WAAWG,cAErE,0BACE,wBAAKL,EAAKE,WAAWI,cAEvB,0BACE,cAAGC,OAAO,SAASC,KAAMR,EAAKE,WAAWC,IAAID,WAAWC,IAAxD,SAA8DH,EAAKE,WAAWC,IAAID,WAAWC,UARjFH,EAAKS,eCpCjC,MARA,WACI,OACI,iCACI,qCACA,SAACC,EAAD","sources":["components/List.js","pages/History.js"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport {List,Skeleton, Divider} from \"antd\";\r\nimport {observer} from 'mobx-react';\r\nimport {useStores} from \"../stores\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Img = styled.img`\r\n  width: 100px;\r\n  height: 120px;\r\n  object-fit: contain;\r\n  border: 1px solid #eee;\r\n`\r\nconst EndMsg = ()=>{return (<><Divider plain>It is all, nothing more ü§ê</Divider></>)}\r\n\r\nconst Component = observer(() => {\r\n  const {HistoryStore,UserStore} = useStores();\r\n\r\n\r\n  const loadMore = () => {\r\n    HistoryStore.find();\r\n  };\r\n\r\n  const options = {\r\n    dataLength: HistoryStore.list.length,\r\n    initialLoad: true,\r\n    pageStart: 0,\r\n    next: () => loadMore(),\r\n    // loader: () => {return (<> { UserStore.currentUser ? <Skeleton avatar paragraph={{ rows: 1 }} active /> : '' }</>)},\r\n    endMessage: UserStore.currentUser ? EndMsg() : '',\r\n    hasMore: !HistoryStore.isLoading && HistoryStore.hasMore,\r\n    useWindow: true,\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(UserStore.currentUser) loadMore()\r\n    return ()=>{\r\n      HistoryStore.reset()\r\n    }\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      <InfiniteScroll {...options}>\r\n        <List\r\n          dataSource={HistoryStore.list}\r\n          renderItem={item =>\r\n            <List.Item key={item.id}>\r\n              <div>\r\n                <Img src={item.attributes.url.attributes.url} alt={item.attributes.fileName}/>\r\n              </div>\r\n              <div>\r\n                <h5>{item.attributes.filename}</h5>\r\n              </div>\r\n              <div>\r\n                <a target='_blank' href={item.attributes.url.attributes.url}>{item.attributes.url.attributes.url}</a>\r\n              </div>\r\n            </List.Item>\r\n          }\r\n        />\r\n      </InfiniteScroll>\r\n    </>\r\n  )\r\n})\r\nexport default Component;\r\n","import React from \"react\";\r\nimport List from \"../components/List\";\r\n\r\nfunction History() {\r\n    return (\r\n        <>\r\n            <h1>History</h1>\r\n            <List/>\r\n        </>\r\n    )\r\n}\r\nexport default History\r\n"],"names":["Img","styled","observer","useStores","HistoryStore","UserStore","loadMore","find","options","dataLength","list","length","initialLoad","pageStart","next","endMessage","currentUser","plain","hasMore","isLoading","useWindow","useEffect","reset","dataSource","renderItem","item","src","attributes","url","alt","fileName","filename","target","href","id","List"],"sourceRoot":""}